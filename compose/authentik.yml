services:
  authentik-postgresql:
    image: docker.io/library/postgres:16-alpine
    container_name: authentik-postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ${MOUNT_PATH}/appdata/postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
  authentik-redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ${MOUNT_PATH}/appdata/redis:/data
  authentik-server:
    image: ghcr.io/goauthentik/server:2024.6.4
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-postgresql
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    volumes:
      - ${MOUNT_PATH}/appdata/authentik/server/media:/media
      - ${MOUNT_PATH}/appdata/authentik/server/custom-templates:/templates
    depends_on:
      - authentik-postgresql
      - authentik-redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik.rule=Host(`authentik.${DNS_DOMAIN}`)"
      # - "traefik.http.routers.authentik.middlewares=chain-oauth@file"
      - "traefik.http.routers.authentik.service=authentik-svc"
      - "traefik.http.services.authentik-svc.loadbalancer.server.port=9000"
  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.6.4
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-postgresql
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    user: root
    volumes:
      - ${SOCK_PATH:-/var/run/docker.sock}:/var/run/docker.sock
      - ${MOUNT_PATH}/appdata/authentik/worker/media:/media
      - ${MOUNT_PATH}/appdata/authentik/worker/certs:/certs
      - ${MOUNT_PATH}/appdata/authentik/worker/custom-templates:/templates
    depends_on:
      - authentik-postgresql
      - authentik-redis
